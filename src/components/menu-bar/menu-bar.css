@import "../../css/units.css";

.menu-bar {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: nowrap;

    /*
        For most things, we shouldn't explicitly set height, and let the
        content push the element to whatever fits. Using a fixed height
        instead, will help us subtract the value we assign from the body,
        adding up to a perfect 100%. This means we don't need to set
        overflow: hidden, which makes it hard to debug. border-box
        simplifies by all of this by removing padding from the equation.
    */
    box-sizing: border-box;
    height: $menu-bar-height;

    /*
        @todo: This adds ~20px in Chrome, when scrolling to the right,
        but fixes [FFx + Safari] [resize window down + scroll to the right] bug.
        width: 100%;
    */
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    background-color: #4c97ff;
    color: white;
}

/*
    Using a wrapper so when logo is hovered, it transforms via its center point
    @todo: not sure if this is needed
*/
.logo-wrapper {
}

.scratch-logo {
    height:  $menu-bar-height;
    padding: 0.8rem 0;
}

.scratch-logo:hover {
    transform: scale(1.1, 1.1);
    background-size: 100%;
    transition: all .075s ease-in;
}

.title {
    display: inline-block;
    margin: 0 2rem;
}

.menu-item {
    display: block;
    padding: 0 1.5rem;
    line-height: $menu-bar-height;
    cursor: pointer;
    text-decoration: none;
    color: white;
    user-select: none;
}

.menu-item:hover {
    opacity: 0.8;
    background: rgba(255, 255, 255, 0.2)
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
    position: relative;
    display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 50;
}

/* Links inside the dropdown */
.dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #f1f1f1}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {display:block;}

/* The Modal (background) */
.modal {
    display: none;
    position: absolute;
    z-index: 50;
    width: 100%;
    height: 100%;
}

/* Modal Content/Box */
.modal-content {
    background-color: #777777;
    padding: 20px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    min-width: 300px;
}

/* Modal Content/Box */
.modal-chartcontent {
    background-color: #ffffff;
    padding: 20px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    min-width: 550px;
    min-height: 460px;
}

/* The Close Button */
.close {
    color: #ffffff;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #cccccc;
    text-decoration: none;
    cursor: pointer;
}

/* The Close Button */
.closechart {
    color: #777777;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.closechart:hover,
.closechart:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 25px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 15px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    color: #777777;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 15px;
    width: 15px;
    background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
    background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 5px;
    top: 3px;
    width: 3px;
    height: 5px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.checkmark-box {
    float: left;
    width: 25%;
    padding:10px;
}
